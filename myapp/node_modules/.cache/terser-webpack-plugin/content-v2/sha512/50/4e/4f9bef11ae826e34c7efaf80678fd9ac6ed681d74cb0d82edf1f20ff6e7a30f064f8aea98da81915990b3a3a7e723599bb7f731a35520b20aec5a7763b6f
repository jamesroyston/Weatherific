{"map":"{\"version\":3,\"sources\":[\"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/src/App.js\",\"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/src/serviceWorker.js\",\"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/src/index.js\"],\"names\":[\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"handleChange\",\"bind\",\"assertThisInitialized\",\"handleSubmit\",\"state\",\"celcius\",\"city\",\"_this2\",\"axios\",\"get\",\"concat\",\"then\",\"response\",\"console\",\"log\",\"data\",\"setState\",\"tempFahrenheit\",\"main\",\"temp\",\"tempCelcius\",\"toCelcius\",\"humidity\",\"pressure\",\"tempMin\",\"temp_min\",\"tempMax\",\"temp_max\",\"windSpeed\",\"wind\",\"speed\",\"toFixed\",\"weather\",\"country\",\"sys\",\"description\",\"capitalize\",\"id\",\"icon\",\"sunrise\",\"formatTime\",\"sunset\",\"latitude\",\"longitude\",\"date\",\"formatDate\",\"Date\",\"loading\",\"error\",\"catch\",\"err\",\"e\",\"inputValue\",\"split\",\"join\",\"getWeather\",\"preventDefault\",\"target\",\"value\",\"react_default\",\"a\",\"createElement\",\"className\",\"onSubmit\",\"type\",\"onChange\",\"placeholder\",\"App_Weather\",\"imageSrc\",\"idIconLookup\",\"App_WeatherBox\",\"sunMovement\",\"isDayTime\",\"React\",\"Component\",\"Weather\",\"props\",\"src\",\"alt\",\"onClick\",\"WeatherBox\",\"currentTime\",\"String\",\"prototype\",\"replace\",\"toUpperCase\",\"hour\",\"getHours\",\"afterNoonCheck\",\"time\",\"hours\",\"getMinutes\",\"substr\",\"day\",\"getDate\",\"monthIndex\",\"getMonth\",\"year\",\"getFullYear\",\"200\",\"201\",\"202\",\"210\",\"211\",\"212\",\"221\",\"230\",\"231\",\"232\",\"300\",\"301\",\"302\",\"310\",\"311\",\"312\",\"313\",\"314\",\"321\",\"500\",\"501\",\"502\",\"503\",\"504\",\"511\",\"520\",\"521\",\"522\",\"531\",\"600\",\"601\",\"611\",\"612\",\"615\",\"616\",\"620\",\"621\",\"622\",\"701\",\"711\",\"721\",\"731\",\"741\",\"751\",\"761\",\"762\",\"771\",\"781\",\"800\",\"801\",\"802\",\"803\",\"804\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\nimport './App.css';\\nimport axios from 'axios';\\n\\nconst getWeatherUrl = (city) => {\\n  return `https://api.openweathermap.org/data/2.5/weather?q=${city},us&units=imperial&,us&appid=fa85391408d3e1a5d77d51507c0dfd61`;\\n};\\n\\n// const getGeocoding = (lat, long) => {\\n//   return `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}&sensor=true&key=AIzaSyCJB7ji6GSFhxbLO0GxtTqrbVa8LrOKkzo`;\\n// };\\n// will introduce the google maps api for in app map views eventually\\n\\nclass App extends React.Component {\\n  constructor() {\\n    super();\\n    // this.handleClick = this.handleClick.bind(this);\\n    this.handleChange = this.handleChange.bind(this);\\n    this.handleSubmit = this.handleSubmit.bind(this);\\n    this.state = {\\n      celcius: false,\\n    };\\n  }\\n\\n  getWeather() {\\n    axios.get(getWeatherUrl(this.state.city))\\n    .then(response => {\\n      console.log(response.data)\\n      this.setState({\\n        tempFahrenheit: response.data.main.temp,\\n        tempCelcius: toCelcius(response.data.main.temp),\\n        humidity: response.data.main.humidity,\\n        pressure: response.data.main.pressure,\\n        tempMin: response.data.main.temp_min,\\n        tempMax: response.data.main.temp_max,\\n        windSpeed: (response.data.wind.speed / .44704).toFixed(2),\\n        weather: response.data.weather[0].main,\\n        country: response.data.sys.country,\\n        description: response.data.weather[0].description.capitalize(),\\n        id: response.data.weather[0].id,\\n        icon: `http://openweathermap.org/img/w/${response.data.weather[0].icon}.png`,\\n        sunrise: formatTime(response.data.sys.sunrise),\\n        sunset: formatTime(response.data.sys.sunset),\\n        latitude: response.data.latitude,\\n        longitude:  response.data.longitude,\\n        date: formatDate(new Date()),\\n        loading: false,\\n        error: null,\\n      });\\n    })\\n    .catch(err => {\\n      this.setState({\\n        loading: false,\\n        error: err,\\n      })\\n    })\\n  }\\n\\n  handleSubmit(e) {\\n    this.setState({\\n      city: this.state.inputValue.split(' ').join('+'),\\n    })\\n    console.log(this.state.city)\\n    this.getWeather()\\n    e.preventDefault()\\n    console.log('City: ' + this.state.city + ' was submitted for get request.')\\n  }\\n\\n  handleChange(e) {\\n    this.setState({\\n      inputValue: e.target.value,\\n    })\\n    console.log(this.state.inputValue)\\n  }\\n\\n\\n  componentDidMount() {\\n    console.log('mounting- mounted')\\n    // this.getWeather()\\n    // why doesn't this work? I've read that you should make AJAX reqs \\n    // in this lifecycle methods\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"container\\\">\\n        {console.log('Note from jamesroyston: You have to submit/hit enter twice in order to get the correct weather for the entered city. Still debugging that bit.')}\\n        <form className=\\\"form\\\" onSubmit={this.handleSubmit}>\\n          <input className=\\\"inputField\\\" type=\\\"text\\\" onChange={this.handleChange} placeholder=\\\"Enter City\\\"/>\\n          <input className=\\\"submitButton\\\" type=\\\"submit\\\" value=\\\"Submit\\\"/>\\n        </form>\\n        <Weather\\n          imageSrc={this.state.icon\\n            ? `https://res.cloudinary.com/lucedesign/image/upload/v1509486590/svg%20weather%20icons/${idIconLookup[this.state.id]}`\\n            : `https://res.cloudinary.com/lucedesign/image/upload/v1509486574/svg%20weather%20icons/weather.svg`\\n          }\\n          description={this.state.description}\\n          city={this.state.inputValue}\\n          date={this.state.date}\\n          temp={this.state.celcius ? `Current: ${this.state.tempCelcius}` : `Current: ${this.state.tempFahrenheit}`}\\n          country={this.state.country}\\n        />\\n\\n        <WeatherBox\\n          sunMovement={isDayTime() ? `Sunset: ${this.state.sunset}` :\\n           `Sunrise: ${this.state.sunrise}`}\\n          humidity={this.state.humidity}\\n          pressure={this.state.pressure}\\n          tempMax={this.state.tempMax}\\n          tempMin={this.state.tempMin}\\n          windSpeed={this.state.windSpeed}\\n          \\n        />\\n      </div>\\n    )\\n  }\\n}\\n\\n\\nconst Weather = props => (\\n  <div>\\n    <img className=\\\"weatherIcon\\\" src={props.imageSrc} alt='filler'/>\\n    <p className=\\\"description\\\">{props.description ? `${props.description} in ` : \\\"\\\"}\\n      <span>\\n        {props.city ? `${props.city.capitalize()}, ${props.country}` : \\\"\\\"}\\n      </span>\\n    </p>\\n    <p>{props.date ? `${props.date}` : \\\"\\\"}</p>\\n    <p onClick={props.onClick}>\\n      {props.temp ? `${props.temp}˚F` : \\\"\\\"}\\n    </p>\\n  </div>\\n);\\n\\n\\nconst WeatherBox = props => (\\n  <div>\\n    \\n    <p>\\n    {props.tempMin && props.tempMax ?\\n    `LoHi: ${props.tempMin}°F | ${props.tempMax}˚F` : \\\"\\\"}\\n    </p>\\n    <p>{props.sunMovement} |<span> Current: {currentTime()}</span></p>\\n    <p>{props.windSpeed ? `Wind Speed: ${props.windSpeed} mph` : \\\"\\\"}</p>\\n    <p>{props.humidity ? `Humidity: ${props.humidity}%` : \\\"\\\"}</p>\\n    <p>{props.pressure ? `Pressure: ${props.pressure} hPa` : \\\"\\\"}</p>\\n  </div>\\n);\\n\\n// Add a function to the String type to capitalize all letters in a sentence\\nString.prototype.capitalize = function() {\\n  return this.replace(/(?:^|\\\\s)\\\\S/g, function(a) {\\n    return a.toUpperCase();\\n  });\\n};\\n\\n// Helper functions -------------------------------------------------\\nlet toCelcius = (temp) => ((temp - 32) * 5 / 9).toFixed(1);\\n\\n\\n// Check if it's between 6am and 6pm and return true or false\\nlet isDayTime = () => {\\n  let date = new Date();\\n  let hour = date.getHours();\\n  if (hour < 18 && hour > 6) {\\n    return true;\\n  } else {\\n    return false;\\n  }\\n};\\n\\nlet afterNoonCheck = () => {\\n  let date = new Date();\\n  let hours = date.getHours();\\n  let isAfterNoon = (hours >= 12) ? true : false;\\n  return isAfterNoon;\\n}\\n\\nlet formatTime = (time) => {\\n  let date = new Date(time*1000);\\n// Hours part from the timestamp\\n  let hours = date.getHours();\\n  hours = (hours > 12) ? hours - 12 : hours;\\n// Minutes part from the timestamp\\n  let minutes = \\\"0\\\" + date.getMinutes();\\n// Will display time in HH:MM format\\n  let formattedTime = hours + ':' + minutes.substr(-2);\\n  return formattedTime + (!afterNoonCheck() ? 'PM' : 'AM')\\n};\\n\\nlet currentTime = () => {\\n  let date = new Date();\\n  let hours = date.getHours();\\n  hours = (hours > 12) ? hours - 12 : hours;\\n  let minutes = \\\"0\\\" + date.getMinutes();\\n  let formattedTime = hours + ':' + minutes.substr(-2)\\n  return formattedTime + (afterNoonCheck() ? 'PM' : 'AM');\\n}\\n\\n\\n\\n// Get a pretty date\\nlet formatDate = (date) => {\\n  let monthNames = [\\n    \\\"January\\\", \\\"February\\\", \\\"March\\\",\\n    \\\"April\\\", \\\"May\\\", \\\"June\\\", \\\"July\\\",\\n    \\\"August\\\", \\\"September\\\", \\\"October\\\",\\n    \\\"November\\\", \\\"December\\\"\\n  ];\\n\\n  let day = date.getDate();\\n  let monthIndex = date.getMonth();\\n  let year = date.getFullYear();\\n\\n  return `${monthNames[monthIndex]} ${day}, ${year}`;\\n}\\n\\n\\n\\n// Icon Lookup Table ----------------------------------------------------------------------------\\nlet idIconLookup = {\\n  200: \\\"thunder.svg\\\",\\n  201: \\\"thunder.svg\\\",\\n  202: \\\"thunder.svg\\\",\\n  210: \\\"thunder.svg\\\",\\n  211: \\\"thunder.svg\\\",\\n  212: \\\"thunder.svg\\\",\\n  221: \\\"thunder.svg\\\",\\n  230: \\\"thunder.svg\\\",\\n  231: \\\"thunder.svg\\\",\\n  232: \\\"thunder.svg\\\",\\n  300: \\\"rainy-4.svg\\\",\\n  301: \\\"rainy-4.svg\\\",\\n  302: \\\"rainy-4.svg\\\",\\n  310: \\\"rainy-5.svg\\\",\\n  311: \\\"rainy-5.svg\\\",\\n  312: \\\"rainy-5.svg\\\",\\n  313: \\\"rainy-6.svg\\\",\\n  314: \\\"rainy-6.svg\\\",\\n  321: \\\"rainy-6.svg\\\",\\n  500: \\\"rainy-7.svg\\\",\\n  501: \\\"rainy-7.svg\\\",\\n  502: \\\"rainy-7.svg\\\",\\n  503: \\\"rainy-7.svg\\\",\\n  504: \\\"rainy-7.svg\\\",\\n  511: \\\"rainy-7.svg\\\",\\n  520: \\\"rainy-7.svg\\\",\\n  521: \\\"rainy-7.svg\\\",\\n  522: \\\"rainy-7.svg\\\",\\n  531: \\\"rainy-7.svg\\\",\\n  600: \\\"snowy-4.svg\\\",\\n  601: \\\"snowy-4.svg\\\",\\n  611: \\\"snowy-4.svg\\\",\\n  612: \\\"snowy-5.svg\\\",\\n  615: \\\"snowy-5.svg\\\",\\n  616: \\\"snowy-5.svg\\\",\\n  620: \\\"snowy-6.svg\\\",\\n  621: \\\"snow-6.svg\\\",\\n  622: \\\"snowy-6.svg\\\",\\n  701: \\\"cloudy.svg\\\",\\n  711: \\\"cloudy.svg\\\",\\n  721: \\\"cloudy.svg\\\",\\n  731: \\\"cloudy.svg\\\",\\n  741: \\\"cloudy.svg\\\",\\n  751: \\\"cloudy.svg\\\",\\n  761: \\\"cloudy.svg\\\",\\n  762: \\\"cloudy.svg\\\",\\n  771: \\\"cloudy.svg\\\",\\n  781: \\\"cloudy.svg\\\",\\n  800: isDayTime() ? \\\"day.svg\\\" : \\\"night.svg\\\",\\n  801: isDayTime() ? \\\"cloudy-day-3.svg\\\" : \\\"cloudy-night-3.svg\\\",\\n  802: isDayTime() ? \\\"cloudy-day-3.svg\\\" : \\\"cloudy-night-3.svg\\\",\\n  803: isDayTime() ? \\\"cloudy-day-3.svg\\\" : \\\"cloudy-night-3.svg\\\",\\n  804: isDayTime() ? \\\"cloudy-day-3.svg\\\" : \\\"cloudy-night-3.svg\\\"\\n};\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{17:function(t,e,n){t.exports=n(44)},23:function(t,e,n){},24:function(t,e,n){},44:function(t,e,n){\"use strict\";n.r(e);var a=n(0),s=n.n(a),i=n(10),r=n.n(i),c=(n(23),n(11)),o=n(12),u=n(15),l=n(13),d=n(16),g=n(2),h=(n(24),n(14)),m=n.n(h),p=function(t){function e(){var t;return Object(c.a)(this,e),(t=Object(u.a)(this,Object(l.a)(e).call(this))).handleChange=t.handleChange.bind(Object(g.a)(Object(g.a)(t))),t.handleSubmit=t.handleSubmit.bind(Object(g.a)(Object(g.a)(t))),t.state={celcius:!1},t}return Object(d.a)(e,t),Object(o.a)(e,[{key:\"getWeather\",value:function(){var t,e=this;m.a.get((t=this.state.city,\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(t,\",us&units=imperial&,us&appid=fa85391408d3e1a5d77d51507c0dfd61\"))).then(function(t){console.log(t.data),e.setState({tempFahrenheit:t.data.main.temp,tempCelcius:w(t.data.main.temp),humidity:t.data.main.humidity,pressure:t.data.main.pressure,tempMin:t.data.main.temp_min,tempMax:t.data.main.temp_max,windSpeed:(t.data.wind.speed/.44704).toFixed(2),weather:t.data.weather[0].main,country:t.data.sys.country,description:t.data.weather[0].description.capitalize(),id:t.data.weather[0].id,icon:\"http://openweathermap.org/img/w/\".concat(t.data.weather[0].icon,\".png\"),sunrise:S(t.data.sys.sunrise),sunset:S(t.data.sys.sunset),latitude:t.data.latitude,longitude:t.data.longitude,date:M(new Date),loading:!1,error:null})}).catch(function(t){e.setState({loading:!1,error:t})})}},{key:\"handleSubmit\",value:function(t){this.setState({city:this.state.inputValue.split(\" \").join(\"+\")}),console.log(this.state.city),this.getWeather(),t.preventDefault(),console.log(\"City: \"+this.state.city+\" was submitted for get request.\")}},{key:\"handleChange\",value:function(t){this.setState({inputValue:t.target.value}),console.log(this.state.inputValue)}},{key:\"componentDidMount\",value:function(){console.log(\"mounting- mounted\")}},{key:\"render\",value:function(){return s.a.createElement(\"div\",{className:\"container\"},console.log(\"Note from jamesroyston: You have to submit/hit enter twice in order to get the correct weather for the entered city. Still debugging that bit.\"),s.a.createElement(\"form\",{className:\"form\",onSubmit:this.handleSubmit},s.a.createElement(\"input\",{className:\"inputField\",type:\"text\",onChange:this.handleChange,placeholder:\"Enter City\"}),s.a.createElement(\"input\",{className:\"submitButton\",type:\"submit\",value:\"Submit\"})),s.a.createElement(y,{imageSrc:this.state.icon?\"https://res.cloudinary.com/lucedesign/image/upload/v1509486590/svg%20weather%20icons/\".concat(C[this.state.id]):\"https://res.cloudinary.com/lucedesign/image/upload/v1509486574/svg%20weather%20icons/weather.svg\",description:this.state.description,city:this.state.inputValue,date:this.state.date,temp:this.state.celcius?\"Current: \".concat(this.state.tempCelcius):\"Current: \".concat(this.state.tempFahrenheit),country:this.state.country}),s.a.createElement(v,{sunMovement:f()?\"Sunset: \".concat(this.state.sunset):\"Sunrise: \".concat(this.state.sunrise),humidity:this.state.humidity,pressure:this.state.pressure,tempMax:this.state.tempMax,tempMin:this.state.tempMin,windSpeed:this.state.windSpeed}))}}]),e}(s.a.Component),y=function(t){return s.a.createElement(\"div\",null,s.a.createElement(\"img\",{className:\"weatherIcon\",src:t.imageSrc,alt:\"filler\"}),s.a.createElement(\"p\",{className:\"description\"},t.description?\"\".concat(t.description,\" in \"):\"\",s.a.createElement(\"span\",null,t.city?\"\".concat(t.city.capitalize(),\", \").concat(t.country):\"\")),s.a.createElement(\"p\",null,t.date?\"\".concat(t.date):\"\"),s.a.createElement(\"p\",{onClick:t.onClick},t.temp?\"\".concat(t.temp,\"\\u02daF\"):\"\"))},v=function(t){return s.a.createElement(\"div\",null,s.a.createElement(\"p\",null,t.tempMin&&t.tempMax?\"LoHi: \".concat(t.tempMin,\"\\xb0F | \").concat(t.tempMax,\"\\u02daF\"):\"\"),s.a.createElement(\"p\",null,t.sunMovement,\" |\",s.a.createElement(\"span\",null,\" Current: \",E())),s.a.createElement(\"p\",null,t.windSpeed?\"Wind Speed: \".concat(t.windSpeed,\" mph\"):\"\"),s.a.createElement(\"p\",null,t.humidity?\"Humidity: \".concat(t.humidity,\"%\"):\"\"),s.a.createElement(\"p\",null,t.pressure?\"Pressure: \".concat(t.pressure,\" hPa\"):\"\"))};String.prototype.capitalize=function(){return this.replace(/(?:^|\\s)\\S/g,function(t){return t.toUpperCase()})};var w=function(t){return(5*(t-32)/9).toFixed(1)},f=function(){var t=(new Date).getHours();return t<18&&t>6},b=function(){return(new Date).getHours()>=12},S=function(t){var e=new Date(1e3*t),n=e.getHours();return(n=n>12?n-12:n)+\":\"+(\"0\"+e.getMinutes()).substr(-2)+(b()?\"AM\":\"PM\")},E=function(){var t=new Date,e=t.getHours();return(e=e>12?e-12:e)+\":\"+(\"0\"+t.getMinutes()).substr(-2)+(b()?\"PM\":\"AM\")},M=function(t){var e=t.getDate(),n=t.getMonth(),a=t.getFullYear();return\"\".concat([\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"][n],\" \").concat(e,\", \").concat(a)},C={200:\"thunder.svg\",201:\"thunder.svg\",202:\"thunder.svg\",210:\"thunder.svg\",211:\"thunder.svg\",212:\"thunder.svg\",221:\"thunder.svg\",230:\"thunder.svg\",231:\"thunder.svg\",232:\"thunder.svg\",300:\"rainy-4.svg\",301:\"rainy-4.svg\",302:\"rainy-4.svg\",310:\"rainy-5.svg\",311:\"rainy-5.svg\",312:\"rainy-5.svg\",313:\"rainy-6.svg\",314:\"rainy-6.svg\",321:\"rainy-6.svg\",500:\"rainy-7.svg\",501:\"rainy-7.svg\",502:\"rainy-7.svg\",503:\"rainy-7.svg\",504:\"rainy-7.svg\",511:\"rainy-7.svg\",520:\"rainy-7.svg\",521:\"rainy-7.svg\",522:\"rainy-7.svg\",531:\"rainy-7.svg\",600:\"snowy-4.svg\",601:\"snowy-4.svg\",611:\"snowy-4.svg\",612:\"snowy-5.svg\",615:\"snowy-5.svg\",616:\"snowy-5.svg\",620:\"snowy-6.svg\",621:\"snow-6.svg\",622:\"snowy-6.svg\",701:\"cloudy.svg\",711:\"cloudy.svg\",721:\"cloudy.svg\",731:\"cloudy.svg\",741:\"cloudy.svg\",751:\"cloudy.svg\",761:\"cloudy.svg\",762:\"cloudy.svg\",771:\"cloudy.svg\",781:\"cloudy.svg\",800:f()?\"day.svg\":\"night.svg\",801:f()?\"cloudy-day-3.svg\":\"cloudy-night-3.svg\",802:f()?\"cloudy-day-3.svg\":\"cloudy-night-3.svg\",803:f()?\"cloudy-day-3.svg\":\"cloudy-night-3.svg\",804:f()?\"cloudy-day-3.svg\":\"cloudy-night-3.svg\"},j=p;Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(s.a.createElement(j,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(t){t.unregister()})}},[[17,1,2]]]);","extractedComments":[]}