{"ast":null,"code":"// Check if it's between 6am and 6pm and return true or false\nexport var isDayTime = function isDayTime() {\n  var date = new Date();\n  var hour = date.getHours();\n\n  if (hour < 18 && hour > 6) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport var afterNoonCheck = function afterNoonCheck() {\n  var date = new Date();\n  var hours = date.getHours();\n  var isAfterNoon = hours >= 12 ? true : false;\n  return isAfterNoon;\n};\nexport var formatTime = function formatTime(time) {\n  var date = new Date(time * 1000); // Hours part from the timestamp\n\n  var hours = date.getHours();\n  hours = hours > 12 ? hours - 12 : hours; // Minutes part from the timestamp\n\n  var minutes = \"0\" + date.getMinutes(); // Will display time in HH:MM format\n\n  var formattedTime = hours + ':' + minutes.substr(-2);\n  return formattedTime + (!afterNoonCheck() ? 'PM' : 'AM');\n};\nexport var currentTime = function currentTime() {\n  var date = new Date();\n  var hours = date.getHours();\n  hours = hours > 12 ? hours - 12 : hours;\n  var minutes = \"0\" + date.getMinutes();\n  var formattedTime = hours + ':' + minutes.substr(-2);\n  return formattedTime + (afterNoonCheck() ? 'PM' : 'AM');\n}; // Get a pretty date\n\nexport var formatDate = function formatDate(date) {\n  var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  var day = date.getDate();\n  var monthIndex = date.getMonth();\n  var year = date.getFullYear();\n  return \"\".concat(monthNames[monthIndex], \" \").concat(day, \", \").concat(year);\n}; // Icon Lookup Table ----------------------------------------------------------------------------\n\nexport var idIconLookup = {\n  200: \"thunder.svg\",\n  201: \"thunder.svg\",\n  202: \"thunder.svg\",\n  210: \"thunder.svg\",\n  211: \"thunder.svg\",\n  212: \"thunder.svg\",\n  221: \"thunder.svg\",\n  230: \"thunder.svg\",\n  231: \"thunder.svg\",\n  232: \"thunder.svg\",\n  300: \"rainy-4.svg\",\n  301: \"rainy-4.svg\",\n  302: \"rainy-4.svg\",\n  310: \"rainy-5.svg\",\n  311: \"rainy-5.svg\",\n  312: \"rainy-5.svg\",\n  313: \"rainy-6.svg\",\n  314: \"rainy-6.svg\",\n  321: \"rainy-6.svg\",\n  500: \"rainy-7.svg\",\n  501: \"rainy-7.svg\",\n  502: \"rainy-7.svg\",\n  503: \"rainy-7.svg\",\n  504: \"rainy-7.svg\",\n  511: \"rainy-7.svg\",\n  520: \"rainy-7.svg\",\n  521: \"rainy-7.svg\",\n  522: \"rainy-7.svg\",\n  531: \"rainy-7.svg\",\n  600: \"snowy-4.svg\",\n  601: \"snowy-4.svg\",\n  611: \"snowy-4.svg\",\n  612: \"snowy-5.svg\",\n  615: \"snowy-5.svg\",\n  616: \"snowy-5.svg\",\n  620: \"snowy-6.svg\",\n  621: \"snow-6.svg\",\n  622: \"snowy-6.svg\",\n  701: \"cloudy.svg\",\n  711: \"cloudy.svg\",\n  721: \"cloudy.svg\",\n  731: \"cloudy.svg\",\n  741: \"cloudy.svg\",\n  751: \"cloudy.svg\",\n  761: \"cloudy.svg\",\n  762: \"cloudy.svg\",\n  771: \"cloudy.svg\",\n  781: \"cloudy.svg\",\n  800: isDayTime() ? \"day.svg\" : \"night.svg\",\n  801: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  802: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  803: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  804: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\"\n};","map":{"version":3,"sources":["/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/src/helperFunctions.js"],"names":["isDayTime","date","Date","hour","getHours","afterNoonCheck","hours","isAfterNoon","formatTime","time","minutes","getMinutes","formattedTime","substr","currentTime","formatDate","monthNames","day","getDate","monthIndex","getMonth","year","getFullYear","idIconLookup"],"mappings":"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","sourcesContent":["// Check if it's between 6am and 6pm and return true or false\nexport let isDayTime = () => {\n  let date = new Date();\n  let hour = date.getHours();\n  if (hour < 18 && hour > 6) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport let afterNoonCheck = () => {\n  let date = new Date();\n  let hours = date.getHours();\n  let isAfterNoon = (hours >= 12) ? true : false;\n  return isAfterNoon;\n}\n\nexport let formatTime = (time) => {\n  let date = new Date(time*1000);\n// Hours part from the timestamp\n  let hours = date.getHours();\n  hours = (hours > 12) ? hours - 12 : hours;\n// Minutes part from the timestamp\n  let minutes = \"0\" + date.getMinutes();\n// Will display time in HH:MM format\n  let formattedTime = hours + ':' + minutes.substr(-2);\n  return formattedTime + (!afterNoonCheck() ? 'PM' : 'AM')\n};\n\nexport let currentTime = () => {\n  let date = new Date();\n  let hours = date.getHours();\n  hours = (hours > 12) ? hours - 12 : hours;\n  let minutes = \"0\" + date.getMinutes();\n  let formattedTime = hours + ':' + minutes.substr(-2)\n  return formattedTime + (afterNoonCheck() ? 'PM' : 'AM');\n}\n\n\n\n// Get a pretty date\nexport let formatDate = (date) => {\n  let monthNames = [\n    \"January\", \"February\", \"March\",\n    \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\",\n    \"November\", \"December\"\n  ];\n\n  let day = date.getDate();\n  let monthIndex = date.getMonth();\n  let year = date.getFullYear();\n\n  return `${monthNames[monthIndex]} ${day}, ${year}`;\n}\n\n\n\n// Icon Lookup Table ----------------------------------------------------------------------------\nexport let idIconLookup = {\n  200: \"thunder.svg\",\n  201: \"thunder.svg\",\n  202: \"thunder.svg\",\n  210: \"thunder.svg\",\n  211: \"thunder.svg\",\n  212: \"thunder.svg\",\n  221: \"thunder.svg\",\n  230: \"thunder.svg\",\n  231: \"thunder.svg\",\n  232: \"thunder.svg\",\n  300: \"rainy-4.svg\",\n  301: \"rainy-4.svg\",\n  302: \"rainy-4.svg\",\n  310: \"rainy-5.svg\",\n  311: \"rainy-5.svg\",\n  312: \"rainy-5.svg\",\n  313: \"rainy-6.svg\",\n  314: \"rainy-6.svg\",\n  321: \"rainy-6.svg\",\n  500: \"rainy-7.svg\",\n  501: \"rainy-7.svg\",\n  502: \"rainy-7.svg\",\n  503: \"rainy-7.svg\",\n  504: \"rainy-7.svg\",\n  511: \"rainy-7.svg\",\n  520: \"rainy-7.svg\",\n  521: \"rainy-7.svg\",\n  522: \"rainy-7.svg\",\n  531: \"rainy-7.svg\",\n  600: \"snowy-4.svg\",\n  601: \"snowy-4.svg\",\n  611: \"snowy-4.svg\",\n  612: \"snowy-5.svg\",\n  615: \"snowy-5.svg\",\n  616: \"snowy-5.svg\",\n  620: \"snowy-6.svg\",\n  621: \"snow-6.svg\",\n  622: \"snowy-6.svg\",\n  701: \"cloudy.svg\",\n  711: \"cloudy.svg\",\n  721: \"cloudy.svg\",\n  731: \"cloudy.svg\",\n  741: \"cloudy.svg\",\n  751: \"cloudy.svg\",\n  761: \"cloudy.svg\",\n  762: \"cloudy.svg\",\n  771: \"cloudy.svg\",\n  781: \"cloudy.svg\",\n  800: isDayTime() ? \"day.svg\" : \"night.svg\",\n  801: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  802: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  803: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  804: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\"\n};\n"]},"metadata":{},"sourceType":"module"}