{"ast":null,"code":"import _classCallCheck from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Form from './components/Form.js';\nimport Weather from './components/Weather.js';\nimport WeatherBox from './components/WeatherBox.js';\nvar key = '41964d2653c96175c88d49f6ba567677';\n\nvar getWeatherUrl = function getWeatherUrl(city) {\n  return \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",us&units=imperial&,us&appid=\").concat(key);\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      city: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getWeather\",\n    value: function getWeather(city) {\n      var _this2 = this;\n\n      console.log('making request, city must have been set');\n      console.log(this.state.city);\n      axios.get(getWeatherUrl(city)).then(function (response) {\n        _this2.setState({\n          name: response.data.name,\n          tempFahrenheit: response.data.main.temp,\n          // tempCelcius: toCelcius(response.data.main.temp),\n          humidity: response.data.main.humidity,\n          pressure: response.data.main.pressure,\n          tempMin: response.data.main.temp_min,\n          tempMax: response.data.main.temp_max,\n          windSpeed: (response.data.wind.speed / .44704).toFixed(2),\n          weather: response.data.weather[0].main,\n          country: response.data.sys.country,\n          description: response.data.weather[0].description.capitalize(),\n          id: response.data.weather[0].id,\n          icon: \"http://openweathermap.org/img/w/\".concat(response.data.weather[0].icon, \".png\"),\n          sunrise: formatTime(response.data.sys.sunrise),\n          sunset: formatTime(response.data.sys.sunset),\n          latitude: response.data.latitude,\n          longitude: response.data.longitude,\n          date: formatDate(new Date()),\n          loading: false,\n          error: null\n        }, console.log(_this2.state));\n      });\n    }\n  }, {\n    key: \"test\",\n    value: function test(e) {\n      console.log(e.target.value);\n      this.setState({\n        title: e.target.value\n      });\n      console.log(this.state);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n\n      if (this.state.city === '') {\n        console.log('no city, woops');\n        return false;\n      } else this.getWeather(this.state.city);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      console.log(e.target.value);\n      this.setState({\n        city: e.target.value.split(' ').join('+')\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var state = this.state;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Title, {\n        title: this.state.title,\n        onChange: this.test.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Form, {\n        onSubmit: this.handleSubmit.bind(this),\n        onChange: this.handleChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Weather, {\n        imageSrc: state.icon ? \"https://res.cloudinary.com/lucedesign/image/upload/v1509486590/svg%20weather%20icons/\".concat(idIconLookup[this.state.id]) : \"https://res.cloudinary.com/lucedesign/image/upload/v1509486574/svg%20weather%20icons/weather.svg\",\n        description: state.description,\n        city: state.name,\n        date: state.date,\n        temp: state.tempFahrenheit,\n        country: state.country,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(WeatherBox, {\n        sunMovement: isDayTime() ? \"Sunset: \".concat(this.state.sunset) : \"Sunrise: \".concat(state.sunrise),\n        humidity: state.humidity,\n        pressure: state.pressure,\n        tempMax: state.tempMax,\n        tempMin: state.tempMin,\n        windSpeed: state.windSpeed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar Title =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Title, _React$Component2);\n\n  function Title() {\n    _classCallCheck(this, Title);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Title).apply(this, arguments));\n  }\n\n  _createClass(Title, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Hello!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.props.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Title;\n}(React.Component); // Check if it's between 6am and 6pm and return true or false\n\n\nvar isDayTime = function isDayTime() {\n  var date = new Date();\n  var hour = date.getHours();\n\n  if (hour < 18 && hour > 6) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nvar afterNoonCheck = function afterNoonCheck() {\n  var date = new Date();\n  var hours = date.getHours();\n  var isAfterNoon = hours >= 12 ? true : false;\n  return isAfterNoon;\n};\n\nvar formatTime = function formatTime(time) {\n  var date = new Date(time * 1000); // Hours part from the timestamp\n\n  var hours = date.getHours();\n  hours = hours > 12 ? hours - 12 : hours; // Minutes part from the timestamp\n\n  var minutes = \"0\" + date.getMinutes(); // Will display time in HH:MM format\n\n  var formattedTime = hours + ':' + minutes.substr(-2);\n  return formattedTime + (!afterNoonCheck() ? 'PM' : 'AM');\n}; // Get a pretty date\n\n\nvar formatDate = function formatDate(date) {\n  var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  var day = date.getDate();\n  var monthIndex = date.getMonth();\n  var year = date.getFullYear();\n  return \"\".concat(monthNames[monthIndex], \" \").concat(day, \", \").concat(year);\n}; // Icon Lookup Table ----------------------------------------------------------------------------\n\n\nvar idIconLookup = {\n  200: \"thunder.svg\",\n  201: \"thunder.svg\",\n  202: \"thunder.svg\",\n  210: \"thunder.svg\",\n  211: \"thunder.svg\",\n  212: \"thunder.svg\",\n  221: \"thunder.svg\",\n  230: \"thunder.svg\",\n  231: \"thunder.svg\",\n  232: \"thunder.svg\",\n  300: \"rainy-4.svg\",\n  301: \"rainy-4.svg\",\n  302: \"rainy-4.svg\",\n  310: \"rainy-5.svg\",\n  311: \"rainy-5.svg\",\n  312: \"rainy-5.svg\",\n  313: \"rainy-6.svg\",\n  314: \"rainy-6.svg\",\n  321: \"rainy-6.svg\",\n  500: \"rainy-7.svg\",\n  501: \"rainy-7.svg\",\n  502: \"rainy-7.svg\",\n  503: \"rainy-7.svg\",\n  504: \"rainy-7.svg\",\n  511: \"rainy-7.svg\",\n  520: \"rainy-7.svg\",\n  521: \"rainy-7.svg\",\n  522: \"rainy-7.svg\",\n  531: \"rainy-7.svg\",\n  600: \"snowy-4.svg\",\n  601: \"snowy-4.svg\",\n  611: \"snowy-4.svg\",\n  612: \"snowy-5.svg\",\n  615: \"snowy-5.svg\",\n  616: \"snowy-5.svg\",\n  620: \"snowy-6.svg\",\n  621: \"snow-6.svg\",\n  622: \"snowy-6.svg\",\n  701: \"cloudy.svg\",\n  711: \"cloudy.svg\",\n  721: \"cloudy.svg\",\n  731: \"cloudy.svg\",\n  741: \"cloudy.svg\",\n  751: \"cloudy.svg\",\n  761: \"cloudy.svg\",\n  762: \"cloudy.svg\",\n  771: \"cloudy.svg\",\n  781: \"cloudy.svg\",\n  800: isDayTime() ? \"day.svg\" : \"night.svg\",\n  801: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  802: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  803: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  804: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\"\n};\nexport default App;","map":{"version":3,"sources":["/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/src/App.js"],"names":["React","axios","Form","Weather","WeatherBox","key","getWeatherUrl","city","App","props","state","console","log","get","then","response","setState","name","data","tempFahrenheit","main","temp","humidity","pressure","tempMin","temp_min","tempMax","temp_max","windSpeed","wind","speed","toFixed","weather","country","sys","description","capitalize","id","icon","sunrise","formatTime","sunset","latitude","longitude","date","formatDate","Date","loading","error","e","target","value","title","preventDefault","getWeather","split","join","test","bind","handleSubmit","handleChange","idIconLookup","isDayTime","Component","Title","onChange","hour","getHours","afterNoonCheck","hours","isAfterNoon","time","minutes","getMinutes","formattedTime","substr","monthNames","day","getDate","monthIndex","getMonth","year","getFullYear"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Form from './components/Form.js';\nimport Weather from './components/Weather.js';\nimport WeatherBox from './components/WeatherBox.js';\n\nconst key = '41964d2653c96175c88d49f6ba567677';\n\nconst getWeatherUrl = (city) => {\n  return `https://api.openweathermap.org/data/2.5/weather?q=${city},us&units=imperial&,us&appid=${key}`;\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      city: ''\n    }\n  }\n\n  getWeather(city) {\n    console.log('making request, city must have been set')\n    console.log(this.state.city)\n\n    axios.get(getWeatherUrl(city))\n    .then(response => {\n      this.setState({\n        name: response.data.name,\n        tempFahrenheit: response.data.main.temp,\n        // tempCelcius: toCelcius(response.data.main.temp),\n        humidity: response.data.main.humidity,\n        pressure: response.data.main.pressure,\n        tempMin: response.data.main.temp_min,\n        tempMax: response.data.main.temp_max,\n        windSpeed: (response.data.wind.speed / .44704).toFixed(2),\n        weather: response.data.weather[0].main,\n        country: response.data.sys.country,\n        description: response.data.weather[0].description.capitalize(),\n        id: response.data.weather[0].id,\n        icon: `http://openweathermap.org/img/w/${response.data.weather[0].icon}.png`,\n        sunrise: formatTime(response.data.sys.sunrise),\n        sunset: formatTime(response.data.sys.sunset),\n        latitude: response.data.latitude,\n        longitude:  response.data.longitude,\n        date: formatDate(new Date()),\n        loading: false,\n        error: null,\n      }, console.log(this.state))\n    })\n  }\n\n  test(e) {\n    console.log(e.target.value)\n    this.setState({\n      title: e.target.value\n    })\n    console.log(this.state)\n  }\n\n\n  handleSubmit(e) {\n    e.preventDefault()\n    if(this.state.city === '') {\n      console.log('no city, woops')\n      return false;\n    } else (\n      this.getWeather(this.state.city)\n    )\n  }\n  \n  handleChange(e) {\n    console.log(e.target.value)\n    this.setState({\n      city: e.target.value.split(' ').join('+'),\n    })\n  }\n\n  render() {\n\n    let state = this.state\n    return (\n      \n      <div className=\"container\">\n\n      <Title title={this.state.title} \n      onChange={this.test.bind(this)}/>\n\n        <Form \n          onSubmit={this.handleSubmit.bind(this)}\n          onChange={this.handleChange.bind(this)}\n        />\n\n        <Weather\n          imageSrc={state.icon\n            ? `https://res.cloudinary.com/lucedesign/image/upload/v1509486590/svg%20weather%20icons/${idIconLookup[this.state.id]}`\n            : `https://res.cloudinary.com/lucedesign/image/upload/v1509486574/svg%20weather%20icons/weather.svg`\n          }\n          description={state.description}\n          city={state.name}\n          date={state.date}\n          temp={state.tempFahrenheit}\n          country={state.country}\n        />\n\n        <WeatherBox\n          sunMovement={isDayTime() ? `Sunset: ${this.state.sunset}` :\n           `Sunrise: ${state.sunrise}`}\n          humidity={state.humidity}\n          pressure={state.pressure}\n          tempMax={state.tempMax}\n          tempMin={state.tempMin}\n          windSpeed={state.windSpeed}\n        />\n      </div>\n    )\n  }\n}\n\nclass Title extends React.Component {\n\n  render() {\n    return(\n      <div>\n      <h1>Hello!</h1>\n      <p>{this.props.title}</p>\n      <input \n        type=\"text\"\n        onChange={this.props.onChange}\n      />\n      </div>\n    )\n  }\n}\n\n// Check if it's between 6am and 6pm and return true or false\nlet isDayTime = () => {\n  let date = new Date();\n  let hour = date.getHours();\n  if (hour < 18 && hour > 6) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nlet afterNoonCheck = () => {\n  let date = new Date();\n  let hours = date.getHours();\n  let isAfterNoon = (hours >= 12) ? true : false;\n  return isAfterNoon;\n}\n\nlet formatTime = (time) => {\n  let date = new Date(time*1000);\n// Hours part from the timestamp\n  let hours = date.getHours();\n  hours = (hours > 12) ? hours - 12 : hours;\n// Minutes part from the timestamp\n  let minutes = \"0\" + date.getMinutes();\n// Will display time in HH:MM format\n  let formattedTime = hours + ':' + minutes.substr(-2);\n  return formattedTime + (!afterNoonCheck() ? 'PM' : 'AM')\n};\n\n// Get a pretty date\nlet formatDate = (date) => {\n  let monthNames = [\n    \"January\", \"February\", \"March\",\n    \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\",\n    \"November\", \"December\"\n  ];\n\n  let day = date.getDate();\n  let monthIndex = date.getMonth();\n  let year = date.getFullYear();\n\n  return `${monthNames[monthIndex]} ${day}, ${year}`;\n}\n\n\n\n// Icon Lookup Table ----------------------------------------------------------------------------\nlet idIconLookup = {\n  200: \"thunder.svg\",\n  201: \"thunder.svg\",\n  202: \"thunder.svg\",\n  210: \"thunder.svg\",\n  211: \"thunder.svg\",\n  212: \"thunder.svg\",\n  221: \"thunder.svg\",\n  230: \"thunder.svg\",\n  231: \"thunder.svg\",\n  232: \"thunder.svg\",\n  300: \"rainy-4.svg\",\n  301: \"rainy-4.svg\",\n  302: \"rainy-4.svg\",\n  310: \"rainy-5.svg\",\n  311: \"rainy-5.svg\",\n  312: \"rainy-5.svg\",\n  313: \"rainy-6.svg\",\n  314: \"rainy-6.svg\",\n  321: \"rainy-6.svg\",\n  500: \"rainy-7.svg\",\n  501: \"rainy-7.svg\",\n  502: \"rainy-7.svg\",\n  503: \"rainy-7.svg\",\n  504: \"rainy-7.svg\",\n  511: \"rainy-7.svg\",\n  520: \"rainy-7.svg\",\n  521: \"rainy-7.svg\",\n  522: \"rainy-7.svg\",\n  531: \"rainy-7.svg\",\n  600: \"snowy-4.svg\",\n  601: \"snowy-4.svg\",\n  611: \"snowy-4.svg\",\n  612: \"snowy-5.svg\",\n  615: \"snowy-5.svg\",\n  616: \"snowy-5.svg\",\n  620: \"snowy-6.svg\",\n  621: \"snow-6.svg\",\n  622: \"snowy-6.svg\",\n  701: \"cloudy.svg\",\n  711: \"cloudy.svg\",\n  721: \"cloudy.svg\",\n  731: \"cloudy.svg\",\n  741: \"cloudy.svg\",\n  751: \"cloudy.svg\",\n  761: \"cloudy.svg\",\n  762: \"cloudy.svg\",\n  771: \"cloudy.svg\",\n  781: \"cloudy.svg\",\n  800: isDayTime() ? \"day.svg\" : \"night.svg\",\n  801: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  802: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  803: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  804: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\"\n};\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}