{"ast":null,"code":"import _classCallCheck from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nvar getWeatherUrl = function getWeatherUrl(city) {\n  return \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",us&units=imperial&,us&appid=fa85391408d3e1a5d77d51507c0dfd61\");\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this)); // this.handleClick = this.handleClick.bind(this);\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      celcius: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getWeather\",\n    value: function getWeather() {\n      var _this2 = this;\n\n      axios.get(getWeatherUrl(this.state.city)).then(function (response) {\n        console.log(response.data);\n\n        _this2.setState({\n          name: response.data.name,\n          tempFahrenheit: response.data.main.temp,\n          tempCelcius: toCelcius(response.data.main.temp),\n          humidity: response.data.main.humidity,\n          pressure: response.data.main.pressure,\n          tempMin: response.data.main.temp_min,\n          tempMax: response.data.main.temp_max,\n          windSpeed: (response.data.wind.speed / .44704).toFixed(2),\n          weather: response.data.weather[0].main,\n          country: response.data.sys.country,\n          description: response.data.weather[0].description.capitalize(),\n          id: response.data.weather[0].id,\n          icon: \"http://openweathermap.org/img/w/\".concat(response.data.weather[0].icon, \".png\"),\n          sunrise: formatTime(response.data.sys.sunrise),\n          sunset: formatTime(response.data.sys.sunset),\n          latitude: response.data.latitude,\n          longitude: response.data.longitude,\n          date: formatDate(new Date()),\n          loading: false,\n          error: null\n        });\n      }).catch(function (err) {\n        _this2.setState({\n          loading: false,\n          error: err\n        });\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      this.setState({\n        city: this.state.inputValue.split(' ').join('+')\n      });\n      console.log(\"is there a value for city? \".concat(this.state.city));\n      e.preventDefault();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        inputValue: e.target.value\n      });\n      console.log(this.state.inputValue);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('mounting- mounted');\n      this.getWeather();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevState) {\n      if (this.state.city !== prevState.city) {\n        this.getWeather();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, console.log('Note from jamesroyston: You have to submit/hit enter twice in order to get the correct weather for the entered city. Still debugging that bit.'), React.createElement(\"form\", {\n        className: \"form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"inputField\",\n        type: \"text\",\n        onChange: this.handleChange,\n        placeholder: \"Enter City\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"submitButton\",\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(Weather, {\n        imageSrc: this.state.icon ? \"https://res.cloudinary.com/lucedesign/image/upload/v1509486590/svg%20weather%20icons/\".concat(idIconLookup[this.state.id]) : \"https://res.cloudinary.com/lucedesign/image/upload/v1509486574/svg%20weather%20icons/weather.svg\",\n        description: this.state.description,\n        city: this.state.name,\n        date: this.state.date,\n        temp: this.state.celcius ? \"Current: \".concat(this.state.tempCelcius) : \"Current: \".concat(this.state.tempFahrenheit),\n        country: this.state.country,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(WeatherBox, {\n        sunMovement: isDayTime() ? \"Sunset: \".concat(this.state.sunset) : \"Sunrise: \".concat(this.state.sunrise),\n        humidity: this.state.humidity,\n        pressure: this.state.pressure,\n        tempMax: this.state.tempMax,\n        tempMin: this.state.tempMin,\n        windSpeed: this.state.windSpeed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar Weather = function Weather(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"weatherIcon\",\n    src: props.imageSrc,\n    alt: \"filler\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, props.description ? \"\".concat(props.description, \" in \") : \"\", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, props.city ? \"\".concat(props.city.capitalize(), \", \").concat(props.country) : \"\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, props.date ? \"\".concat(props.date) : \"\"), React.createElement(\"p\", {\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, props.temp ? \"\".concat(props.temp, \"\\u02DAF\") : \"\"));\n};\n\nvar WeatherBox = function WeatherBox(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, props.tempMin && props.tempMax ? \"LoHi: \".concat(props.tempMin, \"\\xB0F | \").concat(props.tempMax, \"\\u02DAF\") : \"\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, props.sunMovement, \" |\", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \" Current: \", currentTime())), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, props.windSpeed ? \"Wind Speed: \".concat(props.windSpeed, \" mph\") : \"\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, props.humidity ? \"Humidity: \".concat(props.humidity, \"%\") : \"\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, props.pressure ? \"Pressure: \".concat(props.pressure, \" hPa\") : \"\"));\n}; // Add a function to the String type to capitalize all letters in a sentence\n\n\nString.prototype.capitalize = function () {\n  return this.replace(/(?:^|\\s)\\S/g, function (a) {\n    return a.toUpperCase();\n  });\n}; // Helper functions -------------------------------------------------\n\n\nvar toCelcius = function toCelcius(temp) {\n  return ((temp - 32) * 5 / 9).toFixed(1);\n}; // Check if it's between 6am and 6pm and return true or false\n\n\nvar isDayTime = function isDayTime() {\n  var date = new Date();\n  var hour = date.getHours();\n\n  if (hour < 18 && hour > 6) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nvar afterNoonCheck = function afterNoonCheck() {\n  var date = new Date();\n  var hours = date.getHours();\n  var isAfterNoon = hours >= 12 ? true : false;\n  return isAfterNoon;\n};\n\nvar formatTime = function formatTime(time) {\n  var date = new Date(time * 1000); // Hours part from the timestamp\n\n  var hours = date.getHours();\n  hours = hours > 12 ? hours - 12 : hours; // Minutes part from the timestamp\n\n  var minutes = \"0\" + date.getMinutes(); // Will display time in HH:MM format\n\n  var formattedTime = hours + ':' + minutes.substr(-2);\n  return formattedTime + (!afterNoonCheck() ? 'PM' : 'AM');\n};\n\nvar currentTime = function currentTime() {\n  var date = new Date();\n  var hours = date.getHours();\n  hours = hours > 12 ? hours - 12 : hours;\n  var minutes = \"0\" + date.getMinutes();\n  var formattedTime = hours + ':' + minutes.substr(-2);\n  return formattedTime + (afterNoonCheck() ? 'PM' : 'AM');\n}; // Get a pretty date\n\n\nvar formatDate = function formatDate(date) {\n  var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  var day = date.getDate();\n  var monthIndex = date.getMonth();\n  var year = date.getFullYear();\n  return \"\".concat(monthNames[monthIndex], \" \").concat(day, \", \").concat(year);\n}; // Icon Lookup Table ----------------------------------------------------------------------------\n\n\nvar idIconLookup = {\n  200: \"thunder.svg\",\n  201: \"thunder.svg\",\n  202: \"thunder.svg\",\n  210: \"thunder.svg\",\n  211: \"thunder.svg\",\n  212: \"thunder.svg\",\n  221: \"thunder.svg\",\n  230: \"thunder.svg\",\n  231: \"thunder.svg\",\n  232: \"thunder.svg\",\n  300: \"rainy-4.svg\",\n  301: \"rainy-4.svg\",\n  302: \"rainy-4.svg\",\n  310: \"rainy-5.svg\",\n  311: \"rainy-5.svg\",\n  312: \"rainy-5.svg\",\n  313: \"rainy-6.svg\",\n  314: \"rainy-6.svg\",\n  321: \"rainy-6.svg\",\n  500: \"rainy-7.svg\",\n  501: \"rainy-7.svg\",\n  502: \"rainy-7.svg\",\n  503: \"rainy-7.svg\",\n  504: \"rainy-7.svg\",\n  511: \"rainy-7.svg\",\n  520: \"rainy-7.svg\",\n  521: \"rainy-7.svg\",\n  522: \"rainy-7.svg\",\n  531: \"rainy-7.svg\",\n  600: \"snowy-4.svg\",\n  601: \"snowy-4.svg\",\n  611: \"snowy-4.svg\",\n  612: \"snowy-5.svg\",\n  615: \"snowy-5.svg\",\n  616: \"snowy-5.svg\",\n  620: \"snowy-6.svg\",\n  621: \"snow-6.svg\",\n  622: \"snowy-6.svg\",\n  701: \"cloudy.svg\",\n  711: \"cloudy.svg\",\n  721: \"cloudy.svg\",\n  731: \"cloudy.svg\",\n  741: \"cloudy.svg\",\n  751: \"cloudy.svg\",\n  761: \"cloudy.svg\",\n  762: \"cloudy.svg\",\n  771: \"cloudy.svg\",\n  781: \"cloudy.svg\",\n  800: isDayTime() ? \"day.svg\" : \"night.svg\",\n  801: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  802: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  803: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  804: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\"\n};\nexport default App;","map":{"version":3,"sources":["/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/src/App.js"],"names":["React","axios","getWeatherUrl","city","App","handleChange","bind","handleSubmit","state","celcius","get","then","response","console","log","data","setState","name","tempFahrenheit","main","temp","tempCelcius","toCelcius","humidity","pressure","tempMin","temp_min","tempMax","temp_max","windSpeed","wind","speed","toFixed","weather","country","sys","description","capitalize","id","icon","sunrise","formatTime","sunset","latitude","longitude","date","formatDate","Date","loading","error","catch","err","e","inputValue","split","join","preventDefault","target","value","getWeather","prevState","idIconLookup","isDayTime","Component","Weather","props","imageSrc","onClick","WeatherBox","sunMovement","currentTime","String","prototype","replace","a","toUpperCase","hour","getHours","afterNoonCheck","hours","isAfterNoon","time","minutes","getMinutes","formattedTime","substr","monthNames","day","getDate","monthIndex","getMonth","year","getFullYear"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nconst getWeatherUrl = (city) => {\n  return `https://api.openweathermap.org/data/2.5/weather?q=${city},us&units=imperial&,us&appid=fa85391408d3e1a5d77d51507c0dfd61`;\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    // this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      celcius: false,\n    };\n  }\n\n  getWeather() {\n    axios.get(getWeatherUrl(this.state.city))\n    .then(response => {\n      console.log(response.data)\n      this.setState({\n        name: response.data.name,\n        tempFahrenheit: response.data.main.temp,\n        tempCelcius: toCelcius(response.data.main.temp),\n        humidity: response.data.main.humidity,\n        pressure: response.data.main.pressure,\n        tempMin: response.data.main.temp_min,\n        tempMax: response.data.main.temp_max,\n        windSpeed: (response.data.wind.speed / .44704).toFixed(2),\n        weather: response.data.weather[0].main,\n        country: response.data.sys.country,\n        description: response.data.weather[0].description.capitalize(),\n        id: response.data.weather[0].id,\n        icon: `http://openweathermap.org/img/w/${response.data.weather[0].icon}.png`,\n        sunrise: formatTime(response.data.sys.sunrise),\n        sunset: formatTime(response.data.sys.sunset),\n        latitude: response.data.latitude,\n        longitude:  response.data.longitude,\n        date: formatDate(new Date()),\n        loading: false,\n        error: null,\n      });\n    })\n    .catch(err => {\n      this.setState({\n        loading: false,\n        error: err,\n      })\n    })\n  }\n\n  handleSubmit(e) {\n    this.setState({\n      city: this.state.inputValue.split(' ').join('+'),\n    })\n    console.log(`is there a value for city? ${this.state.city}`)\n    e.preventDefault()\n  }\n\n  handleChange(e) {\n    this.setState({\n      inputValue: e.target.value,\n    })\n    console.log(this.state.inputValue)\n  }\n\n\n  componentDidMount() {\n    console.log('mounting- mounted')\n    this.getWeather()\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.city !== prevState.city) {\n      this.getWeather();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        {console.log('Note from jamesroyston: You have to submit/hit enter twice in order to get the correct weather for the entered city. Still debugging that bit.')}\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <input \n            className=\"inputField\" \n            type=\"text\" \n            onChange={this.handleChange} \n            placeholder=\"Enter City\"\n          />\n          <input \n            className=\"submitButton\" \n            type=\"submit\" \n            value=\"Submit\"\n          />\n        </form>\n        <Weather\n          imageSrc={this.state.icon\n            ? `https://res.cloudinary.com/lucedesign/image/upload/v1509486590/svg%20weather%20icons/${idIconLookup[this.state.id]}`\n            : `https://res.cloudinary.com/lucedesign/image/upload/v1509486574/svg%20weather%20icons/weather.svg`\n          }\n          description={this.state.description}\n          city={this.state.name}\n          date={this.state.date}\n          temp={this.state.celcius ? \n          `Current: ${this.state.tempCelcius}` : \n          `Current: ${this.state.tempFahrenheit}`}\n          country={this.state.country}\n        />\n\n        <WeatherBox\n          sunMovement={isDayTime() ? `Sunset: ${this.state.sunset}` :\n           `Sunrise: ${this.state.sunrise}`}\n          humidity={this.state.humidity}\n          pressure={this.state.pressure}\n          tempMax={this.state.tempMax}\n          tempMin={this.state.tempMin}\n          windSpeed={this.state.windSpeed}\n          \n        />\n      </div>\n    )\n  }\n}\n\n\nconst Weather = props => (\n  <div>\n    <img className=\"weatherIcon\" src={props.imageSrc} alt='filler'/>\n    <p className=\"description\">{props.description ? `${props.description} in ` : \"\"}\n      <span>\n        {props.city ? `${props.city.capitalize()}, ${props.country}` : \"\"}\n      </span>\n    </p>\n    <p>{props.date ? `${props.date}` : \"\"}</p>\n    <p onClick={props.onClick}>\n      {props.temp ? `${props.temp}˚F` : \"\"}\n    </p>\n  </div>\n);\n\n\nconst WeatherBox = props => (\n  <div>\n    \n    <p>\n    {props.tempMin && props.tempMax ?\n    `LoHi: ${props.tempMin}°F | ${props.tempMax}˚F` : \"\"}\n    </p>\n    <p>{props.sunMovement} |<span> Current: {currentTime()}</span></p>\n    <p>{props.windSpeed ? `Wind Speed: ${props.windSpeed} mph` : \"\"}</p>\n    <p>{props.humidity ? `Humidity: ${props.humidity}%` : \"\"}</p>\n    <p>{props.pressure ? `Pressure: ${props.pressure} hPa` : \"\"}</p>\n  </div>\n);\n\n// Add a function to the String type to capitalize all letters in a sentence\nString.prototype.capitalize = function() {\n  return this.replace(/(?:^|\\s)\\S/g, function(a) {\n    return a.toUpperCase();\n  });\n};\n\n// Helper functions -------------------------------------------------\nlet toCelcius = (temp) => ((temp - 32) * 5 / 9).toFixed(1);\n\n\n// Check if it's between 6am and 6pm and return true or false\nlet isDayTime = () => {\n  let date = new Date();\n  let hour = date.getHours();\n  if (hour < 18 && hour > 6) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nlet afterNoonCheck = () => {\n  let date = new Date();\n  let hours = date.getHours();\n  let isAfterNoon = (hours >= 12) ? true : false;\n  return isAfterNoon;\n}\n\nlet formatTime = (time) => {\n  let date = new Date(time*1000);\n// Hours part from the timestamp\n  let hours = date.getHours();\n  hours = (hours > 12) ? hours - 12 : hours;\n// Minutes part from the timestamp\n  let minutes = \"0\" + date.getMinutes();\n// Will display time in HH:MM format\n  let formattedTime = hours + ':' + minutes.substr(-2);\n  return formattedTime + (!afterNoonCheck() ? 'PM' : 'AM')\n};\n\nlet currentTime = () => {\n  let date = new Date();\n  let hours = date.getHours();\n  hours = (hours > 12) ? hours - 12 : hours;\n  let minutes = \"0\" + date.getMinutes();\n  let formattedTime = hours + ':' + minutes.substr(-2)\n  return formattedTime + (afterNoonCheck() ? 'PM' : 'AM');\n}\n\n\n\n// Get a pretty date\nlet formatDate = (date) => {\n  let monthNames = [\n    \"January\", \"February\", \"March\",\n    \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\",\n    \"November\", \"December\"\n  ];\n\n  let day = date.getDate();\n  let monthIndex = date.getMonth();\n  let year = date.getFullYear();\n\n  return `${monthNames[monthIndex]} ${day}, ${year}`;\n}\n\n\n\n// Icon Lookup Table ----------------------------------------------------------------------------\nlet idIconLookup = {\n  200: \"thunder.svg\",\n  201: \"thunder.svg\",\n  202: \"thunder.svg\",\n  210: \"thunder.svg\",\n  211: \"thunder.svg\",\n  212: \"thunder.svg\",\n  221: \"thunder.svg\",\n  230: \"thunder.svg\",\n  231: \"thunder.svg\",\n  232: \"thunder.svg\",\n  300: \"rainy-4.svg\",\n  301: \"rainy-4.svg\",\n  302: \"rainy-4.svg\",\n  310: \"rainy-5.svg\",\n  311: \"rainy-5.svg\",\n  312: \"rainy-5.svg\",\n  313: \"rainy-6.svg\",\n  314: \"rainy-6.svg\",\n  321: \"rainy-6.svg\",\n  500: \"rainy-7.svg\",\n  501: \"rainy-7.svg\",\n  502: \"rainy-7.svg\",\n  503: \"rainy-7.svg\",\n  504: \"rainy-7.svg\",\n  511: \"rainy-7.svg\",\n  520: \"rainy-7.svg\",\n  521: \"rainy-7.svg\",\n  522: \"rainy-7.svg\",\n  531: \"rainy-7.svg\",\n  600: \"snowy-4.svg\",\n  601: \"snowy-4.svg\",\n  611: \"snowy-4.svg\",\n  612: \"snowy-5.svg\",\n  615: \"snowy-5.svg\",\n  616: \"snowy-5.svg\",\n  620: \"snowy-6.svg\",\n  621: \"snow-6.svg\",\n  622: \"snowy-6.svg\",\n  701: \"cloudy.svg\",\n  711: \"cloudy.svg\",\n  721: \"cloudy.svg\",\n  731: \"cloudy.svg\",\n  741: \"cloudy.svg\",\n  751: \"cloudy.svg\",\n  761: \"cloudy.svg\",\n  762: \"cloudy.svg\",\n  771: \"cloudy.svg\",\n  781: \"cloudy.svg\",\n  800: isDayTime() ? \"day.svg\" : \"night.svg\",\n  801: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  802: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  803: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  804: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\"\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}