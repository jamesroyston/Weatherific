{"ast":null,"code":"import _classCallCheck from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Form from 'components/Form.js';\nimport Weather from 'components/Weather.js';\nimport WeatherBox from 'components/WeatherBox.js';\nimport { idIconLookup, isDayTime, formatDate, formatTime } from 'helperFunctions.js';\nvar key = '41964d2653c96175c88d49f6ba567677';\n\nvar getWeatherUrl = function getWeatherUrl(city) {\n  return \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",us&units=imperial&,us&appid=\").concat(key);\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      city: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getWeather\",\n    value: function getWeather() {\n      axios.get(getWeatherUrl(this.state.city)).then(function (response) {\n        console.log(response.data);\n        var state = {\n          name: response.data.name,\n          tempFahrenheit: response.data.main.temp,\n          // tempCelcius: toCelcius(response.data.main.temp),\n          humidity: response.data.main.humidity,\n          pressure: response.data.main.pressure,\n          tempMin: response.data.main.temp_min,\n          tempMax: response.data.main.temp_max,\n          windSpeed: (response.data.wind.speed / .44704).toFixed(2),\n          weather: response.data.weather[0].main,\n          country: response.data.sys.country,\n          description: response.data.weather[0].description.capitalize(),\n          id: response.data.weather[0].id,\n          icon: \"http://openweathermap.org/img/w/\".concat(response.data.weather[0].icon, \".png\"),\n          sunrise: formatTime(response.data.sys.sunrise),\n          sunset: formatTime(response.data.sys.sunset),\n          latitude: response.data.latitude,\n          longitude: response.data.longitude,\n          date: formatDate(new Date()),\n          loading: false,\n          error: null\n        };\n        console.log(state);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var state = this.state;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Weather, {\n        imageSrc: state.icon ? \"https://res.cloudinary.com/lucedesign/image/upload/v1509486590/svg%20weather%20icons/\".concat(idIconLookup[this.state.id]) : \"https://res.cloudinary.com/lucedesign/image/upload/v1509486574/svg%20weather%20icons/weather.svg\",\n        description: state.description,\n        city: state.name,\n        date: state.date,\n        temp: state.tempFahrenheit,\n        country: state.country,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(WeatherBox, {\n        sunMovement: isDayTime() ? \"Sunset: \".concat(this.state.sunset) : \"Sunrise: \".concat(state.sunrise),\n        humidity: state.humidity,\n        pressure: state.pressure,\n        tempMax: state.tempMax,\n        tempMin: state.tempMin,\n        windSpeed: state.windSpeed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/src/App.js"],"names":["React","axios","Form","Weather","WeatherBox","idIconLookup","isDayTime","formatDate","formatTime","key","getWeatherUrl","city","App","state","get","then","response","console","log","data","name","tempFahrenheit","main","temp","humidity","pressure","tempMin","temp_min","tempMax","temp_max","windSpeed","wind","speed","toFixed","weather","country","sys","description","capitalize","id","icon","sunrise","sunset","latitude","longitude","date","Date","loading","error","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Form from 'components/Form.js';\nimport Weather from 'components/Weather.js';\nimport WeatherBox from 'components/WeatherBox.js';\nimport { idIconLookup, isDayTime, formatDate, formatTime } from 'helperFunctions.js';\n\nconst key = '41964d2653c96175c88d49f6ba567677';\n\nconst getWeatherUrl = (city) => {\n  return `https://api.openweathermap.org/data/2.5/weather?q=${city},us&units=imperial&,us&appid=${key}`;\n};\n\nclass App extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      city: ''\n    }\n  }\n\n  getWeather() {\n    axios.get(getWeatherUrl(this.state.city))\n    .then(response => {\n      console.log(response.data)\n      let state = {\n        name: response.data.name,\n        tempFahrenheit: response.data.main.temp,\n        // tempCelcius: toCelcius(response.data.main.temp),\n        humidity: response.data.main.humidity,\n        pressure: response.data.main.pressure,\n        tempMin: response.data.main.temp_min,\n        tempMax: response.data.main.temp_max,\n        windSpeed: (response.data.wind.speed / .44704).toFixed(2),\n        weather: response.data.weather[0].main,\n        country: response.data.sys.country,\n        description: response.data.weather[0].description.capitalize(),\n        id: response.data.weather[0].id,\n        icon: `http://openweathermap.org/img/w/${response.data.weather[0].icon}.png`,\n        sunrise: formatTime(response.data.sys.sunrise),\n        sunset: formatTime(response.data.sys.sunset),\n        latitude: response.data.latitude,\n        longitude:  response.data.longitude,\n        date: formatDate(new Date()),\n        loading: false,\n        error: null,\n      }\n    console.log (state)\n    })\n  }\n\n  render() {\n    let state = this.state;\n    return (\n      \n      <div className=\"container\">\n\n        <Form \n\n        />\n        <Weather\n          imageSrc={state.icon\n            ? `https://res.cloudinary.com/lucedesign/image/upload/v1509486590/svg%20weather%20icons/${idIconLookup[this.state.id]}`\n            : `https://res.cloudinary.com/lucedesign/image/upload/v1509486574/svg%20weather%20icons/weather.svg`\n          }\n          description={state.description}\n          city={state.name}\n          date={state.date}\n          temp={state.tempFahrenheit}\n          country={state.country}\n        />\n\n        <WeatherBox\n          sunMovement={isDayTime() ? `Sunset: ${this.state.sunset}` :\n           `Sunrise: ${state.sunrise}`}\n          humidity={state.humidity}\n          pressure={state.pressure}\n          tempMax={state.tempMax}\n          tempMin={state.tempMin}\n          windSpeed={state.windSpeed}\n          \n        />\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}