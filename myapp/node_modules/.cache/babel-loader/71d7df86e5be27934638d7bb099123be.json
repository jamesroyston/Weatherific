{"ast":null,"code":"import _classCallCheck from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/src/components/WeatherBox.js\";\nimport React from 'react';\n\nvar WeatherBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WeatherBox, _React$Component);\n\n  function WeatherBox() {\n    _classCallCheck(this, WeatherBox);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WeatherBox).apply(this, arguments));\n  }\n\n  _createClass(WeatherBox, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, props.tempMin && props.tempMax ? \"LoHi: \".concat(props.tempMin, \"\\xB0F | \").concat(props.tempMax, \"\\u02DAF\") : \"\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"(\", props.sunMovement, \" ? \", props.sunMovement, \" : '')|\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \" Current: \", currentTime())), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, props.windSpeed ? \"Wind Speed: \".concat(props.windSpeed, \" mph\") : \"\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, props.humidity ? \"Humidity: \".concat(props.humidity, \"%\") : \"\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, props.pressure ? \"Pressure: \".concat(props.pressure, \" hPa\") : \"\"));\n    }\n  }]);\n\n  return WeatherBox;\n}(React.Component);\n\nvar afterNoonCheck = function afterNoonCheck() {\n  var date = new Date();\n  var hours = date.getHours();\n  var isAfterNoon = hours >= 12 ? true : false;\n  return isAfterNoon;\n};\n\nvar currentTime = function currentTime() {\n  var date = new Date();\n  var hours = date.getHours();\n  hours = hours > 12 ? hours - 12 : hours;\n  var minutes = \"0\" + date.getMinutes();\n  var formattedTime = hours + ':' + minutes.substr(-2);\n  return formattedTime + (afterNoonCheck() ? 'PM' : 'AM');\n};\n\nexport default WeatherBox;","map":{"version":3,"sources":["/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/src/components/WeatherBox.js"],"names":["React","WeatherBox","props","tempMin","tempMax","sunMovement","currentTime","windSpeed","humidity","pressure","Component","afterNoonCheck","date","Date","hours","getHours","isAfterNoon","minutes","getMinutes","formattedTime","substr"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAGMC,U;;;;;;;;;;;;;6BACK;AACP,UAAIC,KAAK,GAAG,KAAKA,KAAjB;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCA,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACE,OAAvB,mBACQF,KAAK,CAACC,OADd,qBAC6BD,KAAK,CAACE,OADnC,eACiD,EAFlD,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAKF,KAAK,CAACG,WAAX,SAA2BH,KAAK,CAACG,WAAjC,aAAoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiBC,WAAW,EAA5B,CAApD,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIJ,KAAK,CAACK,SAAN,yBAAiCL,KAAK,CAACK,SAAvC,YAAyD,EAA7D,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIL,KAAK,CAACM,QAAN,uBAA8BN,KAAK,CAACM,QAApC,SAAkD,EAAtD,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIN,KAAK,CAACO,QAAN,uBAA8BP,KAAK,CAACO,QAApC,YAAqD,EAAzD,CARF,CADF;AAWA;;;;EAdqBT,KAAK,CAACU,S;;AAkB/B,IAAIC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,MAAIC,KAAK,GAAGF,IAAI,CAACG,QAAL,EAAZ;AACA,MAAIC,WAAW,GAAIF,KAAK,IAAI,EAAV,GAAgB,IAAhB,GAAuB,KAAzC;AACA,SAAOE,WAAP;AACD,CALD;;AAQA,IAAIV,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,MAAIM,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,MAAIC,KAAK,GAAGF,IAAI,CAACG,QAAL,EAAZ;AACAD,EAAAA,KAAK,GAAIA,KAAK,GAAG,EAAT,GAAeA,KAAK,GAAG,EAAvB,GAA4BA,KAApC;AACA,MAAIG,OAAO,GAAG,MAAML,IAAI,CAACM,UAAL,EAApB;AACA,MAAIC,aAAa,GAAGL,KAAK,GAAG,GAAR,GAAcG,OAAO,CAACG,MAAR,CAAe,CAAC,CAAhB,CAAlC;AACA,SAAOD,aAAa,IAAIR,cAAc,KAAK,IAAL,GAAY,IAA9B,CAApB;AACD,CAPD;;AAWA,eAAeV,UAAf","sourcesContent":["import React from 'react';\n\n\nclass WeatherBox extends React.Component {\n  render() {\n    let props = this.props;\n    return (\n      <div>\n        <p>\n        {props.tempMin && props.tempMax ?\n        `LoHi: ${props.tempMin}°F | ${props.tempMax}˚F` : \"\"}\n        </p>\n        <p>({props.sunMovement} ? {props.sunMovement} : '')|<span> Current: {currentTime()}</span></p>\n        <p>{props.windSpeed ? `Wind Speed: ${props.windSpeed} mph` : \"\"}</p>\n        <p>{props.humidity ? `Humidity: ${props.humidity}%` : \"\"}</p>\n        <p>{props.pressure ? `Pressure: ${props.pressure} hPa` : \"\"}</p>\n      </div>\n  )}\n}\n\n\nlet afterNoonCheck = () => {\n  let date = new Date();\n  let hours = date.getHours();\n  let isAfterNoon = (hours >= 12) ? true : false;\n  return isAfterNoon;\n}\n\n\nlet currentTime = () => {\n  let date = new Date();\n  let hours = date.getHours();\n  hours = (hours > 12) ? hours - 12 : hours;\n  let minutes = \"0\" + date.getMinutes();\n  let formattedTime = hours + ':' + minutes.substr(-2)\n  return formattedTime + (afterNoonCheck() ? 'PM' : 'AM');\n}\n\n\n\nexport default WeatherBox "]},"metadata":{},"sourceType":"module"}