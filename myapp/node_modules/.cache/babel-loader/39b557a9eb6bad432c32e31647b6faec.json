{"ast":null,"code":"import _classCallCheck from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/src/App.js\";\nimport React from 'react';\nimport './App.css'; // import $ from 'jquery';\n\nimport axios from 'axios';\n\nvar getWeatherUrl = function getWeatherUrl(city) {\n  return \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",us&units=imperial&,us&appid=fa85391408d3e1a5d77d51507c0dfd61\");\n}; // const getGeocoding = (lat, long) => {\n//   return `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}&sensor=true&key=AIzaSyCJB7ji6GSFhxbLO0GxtTqrbVa8LrOKkzo`;\n// };\n\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      celcius: true // keywords: '',\n\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState({\n        celcius: !this.state.celcius\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('mounting- mounted'); // this.getWeather()\n      // why doesn't this work? I've read that you should make AJAX reqs \n      // in this lifecycle methods\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Weather, {\n        description: this.state.description,\n        city: this.state.city,\n        date: this.state.date,\n        temp: this.state.celcius ? this.state.tempFahrenheit : this.state.tempCelcius,\n        onClick: this.handleClick,\n        country: this.state.country,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(WeatherBox, {\n        humidity: this.state.humidity,\n        pressure: this.state.pressure,\n        seaLevel: this.state.seaLevel,\n        tempMax: this.state.tempMax,\n        tempMin: this.state.tempMin,\n        windSpeed: this.state.windSpeed,\n        imageSrc: this.state.icon ? \"https://res.cloudinary.com/lucedesign/image/upload/v1509486590/svg%20weather%20icons/\".concat(idIconLookup[this.state.id]) : \"https://res.cloudinary.com/lucedesign/image/upload/v1509486574/svg%20weather%20icons/weather.svg\",\n        country: this.state.country,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Form, _React$Component2);\n\n  function Form(props) {\n    var _this2;\n\n    _classCallCheck(this, Form);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n    _this2.handleSubmit = _this2.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleChange = _this2.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(Form, [{\n    key: \"getWeather\",\n    value: function getWeather() {\n      var _this3 = this;\n\n      axios.get(getWeatherUrl(this.state.city)).then(function (response) {\n        console.log(response.data);\n\n        _this3.setState({\n          tempFahrenheit: response.data.main.temp,\n          tempCelcius: toCelcius(response.data.main.temp),\n          humidity: response.data.main.humidity,\n          pressure: response.data.main.pressure,\n          tempMin: response.data.main.temp_min,\n          tempMax: response.data.main.temp_max,\n          seaLevel: response.data.main.sea_level,\n          windSpeed: (response.data.wind.speed / .44704).toFixed(2),\n          weather: response.data.weather[0].main,\n          description: response.data.weather[0].description.capitalize(),\n          id: response.data.weather[0].id,\n          icon: \"http://openweathermap.org/img/w/\".concat(response.data.weather[0].icon, \".png\"),\n          sunrise: response.data.sys.sunrise,\n          sunset: response.data.sys.sunset,\n          latitude: response.data.latitude,\n          longitude: response.data.longitude,\n          date: formatDate(new Date()),\n          loading: false,\n          error: null\n        });\n      }).catch(function (err) {\n        _this3.setState({\n          loading: false,\n          error: err\n        });\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      console.log(this.state.city);\n      this.setState({\n        city: this.state.inputValue\n      });\n      console.log(this.state.city);\n      this.getWeather();\n      e.preventDefault();\n      console.log('City: ' + this.state.city + ' was submitted for get request.'); // this.setState({ city: this.state.keywords })\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        inputValue: e.target.value.split(' ').join('+')\n      });\n      console.log(this.state.inputValue);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Enter city name for weather:\", React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Form;\n}(React.Component); // Contains the weather, description, city, date, and temp\n\n\nvar Weather = function Weather(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, props.description ? \"\".concat(props.description, \" in \") : \"\", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, props.city ? \"\".concat(props.city.capitalize(), \".\") : \"\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, props.date ? \"\".concat(props.date) : \"\"), React.createElement(\"p\", {\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, props.temp, \"\\xB0F\"));\n}; // The rounded weather box that contains the icon and additional weather data\n\n\nvar WeatherBox = function WeatherBox(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"humidity container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, props.pressure ? \"Pressure: \".concat(props.pressure, \" hPa\") : \"\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, props.humidity ? \"Humidity: \".concat(props.humidity, \"%\") : \"\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, props.seaLevel ? \"Sea Level: \".concat(props.seaLevel) : \"\")), React.createElement(\"img\", {\n    src: props.imageSrc,\n    alt: \"filler\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"tempMax container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, props.tempMax ? \"Max Temp: \".concat(props.tempMax, \"\\xB0\") : \"\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, props.tempMin ? \"Min Temp: \".concat(props.tempMin, \"\\xB0\") : \"\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, props.windSpeed ? \"Wind Speed: \".concat(props.windSpeed, \" mph\") : \"\")));\n}; // Add a function to the String type to capitalize all letters in a sentence\n\n\nString.prototype.capitalize = function () {\n  return this.replace(/(?:^|\\s)\\S/g, function (a) {\n    return a.toUpperCase();\n  });\n}; // Helper functions -------------------------------------------------\n\n\nvar toCelcius = function toCelcius(temp) {\n  return ((temp - 32) * 5 / 9).toFixed(1);\n}; // Check if it's between 6am and 6pm and return true or false\n\n\nvar isDayTime = function isDayTime() {\n  var date = new Date();\n  var hour = date.getHours();\n\n  if (hour < 18 && hour > 6) {\n    return true;\n  } else {\n    return false;\n  }\n}; // Get a pretty date\n\n\nvar formatDate = function formatDate(date) {\n  var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  var day = date.getDate();\n  var monthIndex = date.getMonth();\n  var year = date.getFullYear();\n  return \"\".concat(monthNames[monthIndex], \" \").concat(day, \", \").concat(year);\n}; // Icon Lookup Table ----------------------------------------------------------------------------\n\n\nvar idIconLookup = {\n  200: \"thunder.svg\",\n  201: \"thunder.svg\",\n  202: \"thunder.svg\",\n  210: \"thunder.svg\",\n  211: \"thunder.svg\",\n  212: \"thunder.svg\",\n  221: \"thunder.svg\",\n  230: \"thunder.svg\",\n  231: \"thunder.svg\",\n  232: \"thunder.svg\",\n  300: \"rainy-4.svg\",\n  301: \"rainy-4.svg\",\n  302: \"rainy-4.svg\",\n  310: \"rainy-5.svg\",\n  311: \"rainy-5.svg\",\n  312: \"rainy-5.svg\",\n  313: \"rainy-6.svg\",\n  314: \"rainy-6.svg\",\n  321: \"rainy-6.svg\",\n  500: \"rainy-7.svg\",\n  501: \"rainy-7.svg\",\n  502: \"rainy-7.svg\",\n  503: \"rainy-7.svg\",\n  504: \"rainy-7.svg\",\n  511: \"rainy-7.svg\",\n  520: \"rainy-7.svg\",\n  521: \"rainy-7.svg\",\n  522: \"rainy-7.svg\",\n  531: \"rainy-7.svg\",\n  600: \"snowy-4.svg\",\n  601: \"snowy-4.svg\",\n  611: \"snowy-4.svg\",\n  612: \"snowy-5.svg\",\n  615: \"snowy-5.svg\",\n  616: \"snowy-5.svg\",\n  620: \"snowy-6.svg\",\n  621: \"snow-6.svg\",\n  622: \"snowy-6.svg\",\n  701: \"cloudy.svg\",\n  711: \"cloudy.svg\",\n  721: \"cloudy.svg\",\n  731: \"cloudy.svg\",\n  741: \"cloudy.svg\",\n  751: \"cloudy.svg\",\n  761: \"cloudy.svg\",\n  762: \"cloudy.svg\",\n  771: \"cloudy.svg\",\n  781: \"cloudy.svg\",\n  800: isDayTime() ? \"day.svg\" : \"night.svg\",\n  801: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  802: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  803: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  804: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\"\n};\nexport default App;","map":{"version":3,"sources":["/Users/jamesroyston/Projects/fullstackreact_tut/weatherapp_fork_dluce/myapp/src/App.js"],"names":["React","axios","getWeatherUrl","city","App","handleClick","bind","state","celcius","setState","console","log","handleSubmit","handleChange","description","date","tempFahrenheit","tempCelcius","country","humidity","pressure","seaLevel","tempMax","tempMin","windSpeed","icon","idIconLookup","id","Component","Form","props","get","then","response","data","main","temp","toCelcius","temp_min","temp_max","sea_level","wind","speed","toFixed","weather","capitalize","sunrise","sys","sunset","latitude","longitude","formatDate","Date","loading","error","catch","err","e","inputValue","getWeather","preventDefault","target","value","split","join","Weather","onClick","WeatherBox","imageSrc","String","prototype","replace","a","toUpperCase","isDayTime","hour","getHours","monthNames","day","getDate","monthIndex","getMonth","year","getFullYear"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n// import $ from 'jquery';\nimport axios from 'axios';\n\nconst getWeatherUrl = (city) => {\n  return `https://api.openweathermap.org/data/2.5/weather?q=${city},us&units=imperial&,us&appid=fa85391408d3e1a5d77d51507c0dfd61`;\n};\n\n// const getGeocoding = (lat, long) => {\n//   return `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}&sensor=true&key=AIzaSyCJB7ji6GSFhxbLO0GxtTqrbVa8LrOKkzo`;\n// };\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      celcius: true,\n      // keywords: '',\n    };\n  }\n\n  handleClick() {\n    this.setState({\n      celcius: !this.state.celcius\n    });\n  }\n\n  componentDidMount() {\n    console.log('mounting- mounted')\n    // this.getWeather()\n    // why doesn't this work? I've read that you should make AJAX reqs \n    // in this lifecycle methods\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n\n      <Form\n        onSubmit={this.handleSubmit}\n        onChange={this.handleChange}\n        />\n\n        {/* <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" onChange={this.handleChange}/>\n          <input type=\"submit\" value=\"Submit\"/>\n        </form> */}\n\n        <Weather\n          description={this.state.description}\n          city={this.state.city}\n          date={this.state.date}\n          temp={this.state.celcius ? this.state.tempFahrenheit : this.state.tempCelcius}\n          onClick={this.handleClick}\n          country={this.state.country}\n        />\n\n        <WeatherBox\n          humidity={this.state.humidity}\n          pressure={this.state.pressure}\n          seaLevel={this.state.seaLevel}\n          tempMax={this.state.tempMax}\n          tempMin={this.state.tempMin}\n          windSpeed={this.state.windSpeed}\n          imageSrc={this.state.icon\n              ? `https://res.cloudinary.com/lucedesign/image/upload/v1509486590/svg%20weather%20icons/${idIconLookup[this.state.id]}`\n              : `https://res.cloudinary.com/lucedesign/image/upload/v1509486574/svg%20weather%20icons/weather.svg`\n          }\n          country={this.state.country}\n        />\n      </div>\n    )\n  }\n}\n\n\n\nclass Form extends React.Component{\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n\n  getWeather() {\n    axios.get(getWeatherUrl(this.state.city))\n    .then(response => {\n      console.log(response.data)\n      this.setState({\n        tempFahrenheit: response.data.main.temp,\n        tempCelcius: toCelcius(response.data.main.temp),\n        humidity: response.data.main.humidity,\n        pressure: response.data.main.pressure,\n        tempMin: response.data.main.temp_min,\n        tempMax: response.data.main.temp_max,\n        seaLevel: response.data.main.sea_level,\n        windSpeed: (response.data.wind.speed / .44704).toFixed(2),\n        weather: response.data.weather[0].main,\n        description: response.data.weather[0].description.capitalize(),\n        id: response.data.weather[0].id,\n        icon: `http://openweathermap.org/img/w/${response.data.weather[0].icon}.png`,\n        sunrise: response.data.sys.sunrise,\n        sunset: response.data.sys.sunset,\n        latitude: response.data.latitude,\n        longitude:  response.data.longitude,\n        date: formatDate(new Date()),\n        loading: false,\n        error: null,\n      });\n    })\n    .catch(err => {\n      this.setState({\n        loading: false,\n        error: err,\n      })\n    })\n  }\n\n  handleSubmit(e) {\n    console.log(this.state.city)\n    this.setState({\n      city: this.state.inputValue,\n    })\n    console.log(this.state.city)\n\n    this.getWeather()\n    e.preventDefault()\n    console.log('City: ' + this.state.city + ' was submitted for get request.')\n    // this.setState({ city: this.state.keywords })\n  }\n\n  handleChange(e) {\n    this.setState({\n      inputValue: e.target.value.split(' ').join('+'),\n    })\n    console.log(this.state.inputValue)\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          Enter city name for weather:\n          <input type=\"text\" onChange={this.handleChange}/>\n          <input type=\"submit\" value=\"Submit\"/>\n        </form>\n      </div>\n    )\n  }\n}\n\n\n// Contains the weather, description, city, date, and temp\nconst Weather = props => (\n  <div>\n    <p>{props.description ? `${props.description} in ` : \"\"}\n      <span>\n        {props.city ? `${props.city.capitalize()}.` : \"\"}\n      </span>\n    </p>\n\n    <p>{props.date ? `${props.date}` : \"\"}</p>\n\n    <p onClick={props.onClick}>\n      {props.temp}°F\n    </p>\n\n  </div>\n);\n\n\n// The rounded weather box that contains the icon and additional weather data\nconst WeatherBox = props => (\n  <div>\n    <div className=\"humidity container\">\n      <p>{props.pressure ? `Pressure: ${props.pressure} hPa` : \"\"}</p>\n      <p>{props.humidity ? `Humidity: ${props.humidity}%` : \"\"}</p>\n      <p>{props.seaLevel ? `Sea Level: ${props.seaLevel}` : \"\"}</p>\n    </div>\n    <img src={props.imageSrc} alt='filler'/>\n    <div className=\"tempMax container\">\n      <p>{props.tempMax ? `Max Temp: ${props.tempMax}°` : \"\"}</p>\n      <p>{props.tempMin ? `Min Temp: ${props.tempMin}°` : \"\"}</p>\n      <p>{props.windSpeed ? `Wind Speed: ${props.windSpeed} mph` : \"\"}</p>\n    </div>\n  </div>\n);\n\n// Add a function to the String type to capitalize all letters in a sentence\nString.prototype.capitalize = function() {\n  return this.replace(/(?:^|\\s)\\S/g, function(a) {\n    return a.toUpperCase();\n  });\n};\n\n// Helper functions -------------------------------------------------\nlet toCelcius = (temp) => ((temp - 32) * 5 / 9).toFixed(1);\n\n\n// Check if it's between 6am and 6pm and return true or false\nlet isDayTime = () => {\n  let date = new Date();\n  let hour = date.getHours();\n  if (hour < 18 && hour > 6) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n// Get a pretty date\nlet formatDate = (date) => {\n  let monthNames = [\n    \"January\", \"February\", \"March\",\n    \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\",\n    \"November\", \"December\"\n  ];\n\n  let day = date.getDate();\n  let monthIndex = date.getMonth();\n  let year = date.getFullYear();\n\n  return `${monthNames[monthIndex]} ${day}, ${year}`;\n}\n\n\n\n// Icon Lookup Table ----------------------------------------------------------------------------\nlet idIconLookup = {\n  200: \"thunder.svg\",\n  201: \"thunder.svg\",\n  202: \"thunder.svg\",\n  210: \"thunder.svg\",\n  211: \"thunder.svg\",\n  212: \"thunder.svg\",\n  221: \"thunder.svg\",\n  230: \"thunder.svg\",\n  231: \"thunder.svg\",\n  232: \"thunder.svg\",\n  300: \"rainy-4.svg\",\n  301: \"rainy-4.svg\",\n  302: \"rainy-4.svg\",\n  310: \"rainy-5.svg\",\n  311: \"rainy-5.svg\",\n  312: \"rainy-5.svg\",\n  313: \"rainy-6.svg\",\n  314: \"rainy-6.svg\",\n  321: \"rainy-6.svg\",\n  500: \"rainy-7.svg\",\n  501: \"rainy-7.svg\",\n  502: \"rainy-7.svg\",\n  503: \"rainy-7.svg\",\n  504: \"rainy-7.svg\",\n  511: \"rainy-7.svg\",\n  520: \"rainy-7.svg\",\n  521: \"rainy-7.svg\",\n  522: \"rainy-7.svg\",\n  531: \"rainy-7.svg\",\n  600: \"snowy-4.svg\",\n  601: \"snowy-4.svg\",\n  611: \"snowy-4.svg\",\n  612: \"snowy-5.svg\",\n  615: \"snowy-5.svg\",\n  616: \"snowy-5.svg\",\n  620: \"snowy-6.svg\",\n  621: \"snow-6.svg\",\n  622: \"snowy-6.svg\",\n  701: \"cloudy.svg\",\n  711: \"cloudy.svg\",\n  721: \"cloudy.svg\",\n  731: \"cloudy.svg\",\n  741: \"cloudy.svg\",\n  751: \"cloudy.svg\",\n  761: \"cloudy.svg\",\n  762: \"cloudy.svg\",\n  771: \"cloudy.svg\",\n  781: \"cloudy.svg\",\n  800: isDayTime() ? \"day.svg\" : \"night.svg\",\n  801: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  802: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  803: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  804: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\"\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}