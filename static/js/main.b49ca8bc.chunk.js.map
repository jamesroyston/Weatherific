{"version":3,"sources":["components/Form.js","components/Weather.js","components/WeatherBox.js","App.js","index.js"],"names":["Form","react_default","a","createElement","className","onSubmit","this","props","type","placeholder","onChange","value","React","Component","String","prototype","capitalize","replace","toUpperCase","Weather","src","imageSrc","description","concat","city","country","date","temp","WeatherBox","tempMin","tempMax","sunMovement","currentTime","windSpeed","humidity","pressure","Date","hours","getHours","getMinutes","substr","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","console","log","axios","get","getWeatherUrl","then","response","setState","name","data","tempFahrenheit","main","temp_min","temp_max","wind","speed","toFixed","weather","sys","id","icon","sunrise","formatTime","sunset","latitude","longitude","formatDate","loading","error","e","title","target","preventDefault","getWeather","split","join","components_Form","handleSubmit","bind","handleChange","components_Weather","idIconLookup","components_WeatherBox","isDayTime","hour","time","day","getDate","monthIndex","getMonth","year","getFullYear","200","201","202","210","211","212","221","230","231","232","300","301","302","310","311","312","313","314","321","500","501","502","503","504","511","520","521","522","531","600","601","611","612","615","616","620","621","622","701","711","721","731","741","751","761","762","771","781","800","801","802","803","804","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b49ca8bc.chunk.js","sourcesContent":["import React from 'react';\n\nclass Form extends React.Component {\n  render() {\n    return (\n      <div>\n      <form\n        className=\"form\" \n        onSubmit={this.props.onSubmit}\n        \n        >\n\n        <input\n          className=\"inputField\" \n          type=\"text\" \n          placeholder=\"Enter City\"\n          onChange={this.props.onChange} \n        />\n\n        <input\n          className=\"submitButton\" \n          type=\"submit\" \n          value=\"Submit\"\n        />\n        \n      </form>\n      </div>\n  )\n}\n}\n\n\nexport default Form ;","import React from 'react';\n\nString.prototype.capitalize = function() {\n  return this.replace(/(?:^|\\s)\\S/g, function(a) {\n    return a.toUpperCase();\n  });\n};\n\nclass Weather extends React.Component {\n\n  \n  render() {\n    let props = this.props;\n    return (\n      <div>\n        <img \n          className=\"weatherIcon\" \n          src={props.imageSrc} />\n        <p \n          className=\"description\">\n            {props.description \n              ? `${props.description} in ` : \"\"}\n          <span>\n            {props.city \n              ? `${props.city.capitalize()}, ${props.country}` : \"\"}\n          </span>\n        </p>\n        <p>{props.date ? `${props.date}` : \"\"}</p>\n        <p>\n          {props.temp ? `${props.temp}˚F` : \"\"}\n        </p>\n      </div>\n\n    )\n  }\n}\n\n\nexport default Weather ;","import React from 'react';\n\n\nclass WeatherBox extends React.Component {\n  render() {\n    let props = this.props;\n    return (\n      <div>\n        <p>\n        {props.tempMin && props.tempMax ?\n        `LoHi: ${props.tempMin}°F | ${props.tempMax}˚F` : \"\"}\n        </p>\n        <p>{props.sunMovement} |<span> Current: {currentTime()}</span></p>\n        <p>{props.windSpeed ? `Wind Speed: ${props.windSpeed} mph` : \"\"}</p>\n        <p>{props.humidity ? `Humidity: ${props.humidity}%` : \"\"}</p>\n        <p>{props.pressure ? `Pressure: ${props.pressure} hPa` : \"\"}</p>\n      </div>\n  )}\n}\n\n\nlet afterNoonCheck = () => {\n  let date = new Date();\n  let hours = date.getHours();\n  let isAfterNoon = (hours >= 12) ? true : false;\n  return isAfterNoon;\n}\n\n\nlet currentTime = () => {\n  let date = new Date();\n  let hours = date.getHours();\n  hours = (hours > 12) ? hours - 12 : hours;\n  let minutes = \"0\" + date.getMinutes();\n  let formattedTime = hours + ':' + minutes.substr(-2)\n  return formattedTime + (afterNoonCheck() ? 'PM' : 'AM');\n}\n\n\n\nexport default WeatherBox ","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Form from './components/Form.js';\nimport Weather from './components/Weather.js';\nimport WeatherBox from './components/WeatherBox.js';\n\nconst key = '41964d2653c96175c88d49f6ba567677';\n\nconst getWeatherUrl = (city) => {\n  return `https://api.openweathermap.org/data/2.5/weather?q=${city},us&units=imperial&,us&appid=${key}`;\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      city: ''\n    }\n  }\n\n  getWeather(city) {\n    console.log('making request, city must have been set')\n    console.log(this.state.city)\n\n    axios.get(getWeatherUrl(city))\n    .then(response => {\n      this.setState({\n        name: response.data.name,\n        tempFahrenheit: response.data.main.temp,\n        // tempCelcius: toCelcius(response.data.main.temp),\n        humidity: response.data.main.humidity,\n        pressure: response.data.main.pressure,\n        tempMin: response.data.main.temp_min,\n        tempMax: response.data.main.temp_max,\n        windSpeed: (response.data.wind.speed / .44704).toFixed(2),\n        weather: response.data.weather[0].main,\n        country: response.data.sys.country,\n        description: response.data.weather[0].description.capitalize(),\n        id: response.data.weather[0].id,\n        icon: `http://openweathermap.org/img/w/${response.data.weather[0].icon}.png`,\n        sunrise: formatTime(response.data.sys.sunrise),\n        sunset: formatTime(response.data.sys.sunset),\n        latitude: response.data.latitude,\n        longitude:  response.data.longitude,\n        date: formatDate(new Date()),\n        loading: false,\n        error: null,\n      }, console.log(this.state))\n    })\n  }\n\n  test(e) {\n    // console.log(e.target.value)\n    this.setState({\n      title: e.target.value\n    })\n    console.log(this.state)\n  }\n\n\n  handleSubmit(e) {\n    e.preventDefault()\n    if(this.state.city === '') {\n      console.log('no city, woops')\n      return false;\n    } else (\n      this.getWeather(this.state.city)\n    )\n  }\n  \n  handleChange(e) {\n    console.log(e.target.value)\n    this.setState({\n      city: e.target.value.split(' ').join('+'),\n    })\n  }\n\n  render() {\n\n    let state = this.state\n    return (\n      \n      <div className=\"container\">\n\n        <Form \n          onSubmit={this.handleSubmit.bind(this)}\n          onChange={this.handleChange.bind(this)}\n        />\n\n        <Weather\n          imageSrc={state.icon\n            ? `https://res.cloudinary.com/dd3sr6mdw/image/upload/v1554398295/${idIconLookup[this.state.id]}`\n            : `https://res.cloudinary.com/dd3sr6mdw/image/upload/v1554398295/weather.svg`\n          }\n          description={state.description}\n          city={state.name}\n          date={state.date}\n          temp={state.tempFahrenheit}\n          country={state.country}\n        />\n\n        <WeatherBox\n          sunMovement={isDayTime() ? `Sunset: ${this.state.sunset}` :\n           `Sunrise: ${state.sunrise}`}\n          humidity={state.humidity}\n          pressure={state.pressure}\n          tempMax={state.tempMax}\n          tempMin={state.tempMin}\n          windSpeed={state.windSpeed}\n        />\n      </div>\n    )\n  }\n}\n\n\n// Check if it's between 6am and 6pm and return true or false\nlet isDayTime = () => {\n  let date = new Date();\n  let hour = date.getHours();\n  if (hour < 18 && hour > 6) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nlet afterNoonCheck = () => {\n  let date = new Date();\n  let hours = date.getHours();\n  let isAfterNoon = (hours >= 12) ? true : false;\n  return isAfterNoon;\n}\n\nlet formatTime = (time) => {\n  let date = new Date(time*1000);\n// Hours part from the timestamp\n  let hours = date.getHours();\n  hours = (hours > 12) ? hours - 12 : hours;\n// Minutes part from the timestamp\n  let minutes = \"0\" + date.getMinutes();\n// Will display time in HH:MM format\n  let formattedTime = hours + ':' + minutes.substr(-2);\n  return formattedTime + (!afterNoonCheck() ? 'PM' : 'AM')\n};\n\n// Get a pretty date\nlet formatDate = (date) => {\n  let monthNames = [\n    \"January\", \"February\", \"March\",\n    \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\",\n    \"November\", \"December\"\n  ];\n\n  let day = date.getDate();\n  let monthIndex = date.getMonth();\n  let year = date.getFullYear();\n\n  return `${monthNames[monthIndex]} ${day}, ${year}`;\n}\n\n\n// Icon Lookup Table ----------------------------------------------------------------------------\nlet idIconLookup = {\n  200: \"thunder.svg\",\n  201: \"thunder.svg\",\n  202: \"thunder.svg\",\n  210: \"thunder.svg\",\n  211: \"thunder.svg\",\n  212: \"thunder.svg\",\n  221: \"thunder.svg\",\n  230: \"thunder.svg\",\n  231: \"thunder.svg\",\n  232: \"thunder.svg\",\n  300: \"rainy-4.svg\",\n  301: \"rainy-4.svg\",\n  302: \"rainy-4.svg\",\n  310: \"rainy-5.svg\",\n  311: \"rainy-5.svg\",\n  312: \"rainy-5.svg\",\n  313: \"rainy-6.svg\",\n  314: \"rainy-6.svg\",\n  321: \"rainy-6.svg\",\n  500: \"rainy-7.svg\",\n  501: \"rainy-7.svg\",\n  502: \"rainy-7.svg\",\n  503: \"rainy-7.svg\",\n  504: \"rainy-7.svg\",\n  511: \"rainy-7.svg\",\n  520: \"rainy-7.svg\",\n  521: \"rainy-7.svg\",\n  522: \"rainy-7.svg\",\n  531: \"rainy-7.svg\",\n  600: \"snowy-4.svg\",\n  601: \"snowy-4.svg\",\n  611: \"snowy-4.svg\",\n  612: \"snowy-5.svg\",\n  615: \"snowy-5.svg\",\n  616: \"snowy-5.svg\",\n  620: \"snowy-6.svg\",\n  621: \"snow-6.svg\",\n  622: \"snowy-6.svg\",\n  701: \"cloudy.svg\",\n  711: \"cloudy.svg\",\n  721: \"cloudy.svg\",\n  731: \"cloudy.svg\",\n  741: \"cloudy.svg\",\n  751: \"cloudy.svg\",\n  761: \"cloudy.svg\",\n  762: \"cloudy.svg\",\n  771: \"cloudy.svg\",\n  781: \"cloudy.svg\",\n  800: isDayTime() ? \"day.svg\" : \"night.svg\",\n  801: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  802: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  803: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\",\n  804: isDayTime() ? \"cloudy-day-3.svg\" : \"cloudy-night-3.svg\"\n};\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}